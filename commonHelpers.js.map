{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\niziToast.settings({\n  layout: 2,\n  position: 'topRight',\n});\n\nconst input = document.querySelector('#datetime-picker');\nconst start = document.querySelector('button');\nconst timerValues = [...document.querySelectorAll('.value')];\n\nstart.disabled = true;\n\nconst today = new Date();\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < today) {\n      getDisabledStart();\n      return;\n    }\n    userSelectedDate = selectedDates[0];\n    start.disabled = false;\n  },\n};\n\nfunction getDisabledStart() {\n  start.disabled = true;\n  iziToast.error({\n    title: 'Error!!!',\n    message: 'Please choose a date in the future',\n  });\n}\n\nstart.addEventListener('click', () => {\n  //якщо обрали у календарі 1хв, і пізно натиснули старт, то нічого не буде\n  if (userSelectedDate - Date.now() < 1000) {\n    getDisabledStart();\n    return;\n  }\n  timer();\n});\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction timer() {\n  const resultConvert = convertMs(userSelectedDate - Date.now());\n  timerValues.map(\n    (value, index) =>\n      (value.innerHTML = Object.values(resultConvert)\n        [index].toString()\n        .padStart(2, '0'))\n  );\n  let timerID = setTimeout(() => timer(), 1000);\n  input.disabled = true;\n  start.disabled = true;\n  if (userSelectedDate - Date.now() < 1000) {\n    clearInterval(timerID);\n    input.disabled = false;\n  }\n}\n"],"names":["iziToast","input","start","timerValues","today","userSelectedDate","options","selectedDates","getDisabledStart","timer","flatpickr","convertMs","ms","days","hours","minutes","seconds","resultConvert","value","index","timerID"],"mappings":"sFAKAA,EAAS,SAAS,CAChB,OAAQ,EACR,SAAU,UACZ,CAAC,EAED,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAc,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAE3DD,EAAM,SAAW,GAEjB,MAAME,EAAQ,IAAI,KAElB,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAIH,EAAO,CAC5BI,IACA,MACD,CACDH,EAAmBE,EAAc,CAAC,EAClCL,EAAM,SAAW,EAClB,CACH,EAEA,SAASM,GAAmB,CAC1BN,EAAM,SAAW,GACjBF,EAAS,MAAM,CACb,MAAO,WACP,QAAS,oCACb,CAAG,CACH,CAEAE,EAAM,iBAAiB,QAAS,IAAM,CAEpC,GAAIG,EAAmB,KAAK,IAAG,EAAK,IAAM,CACxCG,IACA,MACD,CACDC,GACF,CAAC,EAEDC,EAAUT,EAAOK,CAAO,EAExB,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASP,GAAQ,CACf,MAAMQ,EAAgBN,EAAUN,EAAmB,KAAK,IAAK,CAAA,EAC7DF,EAAY,IACV,CAACe,EAAOC,IACLD,EAAM,UAAY,OAAO,OAAOD,CAAa,EAC3CE,CAAK,EAAE,SAAU,EACjB,SAAS,EAAG,GAAG,CACxB,EACE,IAAIC,EAAU,WAAW,IAAMX,EAAO,EAAE,GAAI,EAC5CR,EAAM,SAAW,GACjBC,EAAM,SAAW,GACbG,EAAmB,KAAK,IAAG,EAAK,MAClC,cAAce,CAAO,EACrBnB,EAAM,SAAW,GAErB"}